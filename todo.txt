1) change lots/player system to auto save and clear after being offline for an hour - solves both limited lots issue + brickcount issues
1a) farming lot size will have a fixed max, so instead of "bigger farm" it'll be "choice of plants/farm design"
2) lots cost a *lot* of money and income is generally largely reduced across the board. however, you can go into debt to purchase the next lot upgrade, but must pay off that debt before you can purchase any lot or home upgrade. debt increases by 1% simple interest per day/week/whatever something like that so it gives people pressure to work to pay off but not a huge amount of pressure either.
2a) "home teledoor" so people can have a home without sacrificing lot space - ac sort of interior-only space they can choose to build
2b) tools wear out, cost money
3) fishing or mining for dead broke people who cant even afford seeds to grow stuff
3a) fishing/exploration for special bricks for building


- lots
	- by-blid save/loading, using an edited copy of autosaver
		- bricks placed on users lot or in users home will take ownership of that user (so saving is properly handled)
		- disable /clearbricks, inform player of /hardreset
	- keep queue of who was last online, pop queue and save + clear their bricks on dc
	- ensure at least 2-5 lot spots are free at any one time - gives time for autosaver to save and load, player choice
	- home teledoor
		- enclosed, roofed space. allows floating bricks via invisible modter. does not allow duplicator.
		- can build anything in here, including storage and crops. crops wont grow due to no sunlight.
		- only one home teledoor at any one time in either lot or home build
- tools rework
	- tools are now stackable >> have durability
		- disable or fully remove tools on 0 durability
	- repair event that repairs currently equipped tool (bot shopkeeper)
	- multiple models to represent durability level?
- quests
	- quest acquiring mechanics
		- visit a quest-giver's location, grab a quest note from their quest pad
			- dialog box shows quest, click ok to accept
			- if player already holding quest note, dialog box asking if they want to replace their current quest with the new one
		- can only pick up a quest every [interval] from a given quest-giver, per-player timeout
			- unique timeout per quest-giver, configurable via event field
			- generate a new quest on pickup, otherwise show same quest to everyone
				- allows people to see available quest and ask if anyone else is interested in it
		- postings have event that pops up dialog box - ok = confirm quest
			- quests thus have to be encoded in string format for austosaver to properly handle quest posting saving
		- single line - items are fields, each field is a word pair of item/stack type and quantity
			- everything before | is requirements, everything after | is reward
			- ensure datablock names are used, not id's
			- use player persistence, store quests in fixed slots (%cl.quest0, quest1, etc)
	- maximum quests at one time - four
		- not currently equipped quests are put on board, maximum 4 (allow people to not equip a quest at any time)
		- player can only build one quest board (saved to brickgroup as a custom field)
		- player can only hold one on their person, click on a quest from the board to change active quest
			- if no active quest, quest is removed from the board
			- changing quests changes currently stored quest id on client (%cl.currentQuest = -1 or 0-3, player persistence to save it)
		- player can drop quest note to remove active quest, automatically sends back to quest board
			- dialog box to confirm drop/send back to board
	- discarding quests
		- hammer hit quest note brick, opens dialog box to confirm discard
	- completing quest
		- deposit active quest's items at post office
		- when all requested items are deposited, use quest note item for reward (avoid unnecessary extra packaging over drop code)
	- checking on quest progress
		- single quest note in inventory, displays info about current quest and completion when held
		- quest note always shows remaining progress (aka %cl.quest0 information formatted nicely)
			- avoid storing extra "initial quest state" to simplify code + reduce characters needed to display progress as centerprint
			- worst case scenario - quest note on use sends a chat message to user
- fishing
	- on fishing rod use: throw unpickupable bobber item, which has density set so it floats on water
	- on fish ready to catch, play bob animation on bobber - aka minecraft mechanics copy
	- can display circle shadow on bobber based on catch type, so people can choose to wait for next bob to reel in
		- higher tier rods show more information on what is hooked?
	- fish sold at fish market, no other use for fish. also stackable.
